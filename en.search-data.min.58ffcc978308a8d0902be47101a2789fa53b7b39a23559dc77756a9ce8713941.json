[{"id":0,"href":"/life/08001/","title":"Sony Creative Look","section":"Life","content":" Creative Look # color filter # Whenever I bought a new camera, I always felt the urge to try out all the new features—and honestly, that often led me to make mistakes. One typical example was color filters. I remember doing it when I was using the Nikon D750, and again when I first switched over to Sony, playing around with those so-called “My Style” color filters.\nNow, think about this: when you take photos with your smartphone and post them on Instagram, how often do you actually use those filters?\nFor me, filtered photos might look fun and interesting at first, but after seeing them a couple of times, they started to feel kind of cheap and unattractive.\nCreative Look # When you look at photos alone, Creative Look is often talked about as if it’s some kind of magic fix for everything. But once I actually tried it out, it didn’t feel all that different from the usual color filters, smartphone filters, or even the presets you get in Lightroom.\nWhat’s strange, though, is that in the past RAW files weren’t really affected by these settings. Now, with the applied color profile, some of those adjustments are baked in beforehand—and I’ve found that this can be pretty annoying when it comes to post-processing.\nST, PT # Even though I spent a good amount of money to upgrade, it’s still a bit disappointing that I end up having to rely on the same color levels that were in the old “My Style” presets, like ST or PT.\nPart of the problem is that Sony’s LCD display isn’t great, so I couldn’t immediately notice when something looked off. On top of that, my own limited skills in post-processing probably played a role too—I wasn’t always sure how much adjustment I could get away with.\n"},{"id":1,"href":"/vba/03001/","title":"How to use macro?","section":"VBA","content":" How to use self-made macro without any setting? # Loading Add-ins in Excel vs. PowerPoint # Although not required, using the designated folder can be convenient and helps keep your add-ins organized. So, for clarity, we can summarize the difference like this:\nExcel → Automatically loads add-ins from the XLSTART folder PowerPoint → Requires manual add-in registration, regardless of file location Using VBA and Add-ins in Excel # Usually, the common approach is to save your current workbook as an .xlsm file and keep the VBA code inside it. But when you need to share the file with colleagues, an .xlsm file can sometimes be a bit inconvenient.\nIf the macro is just for your personal use, a better way is to create an add-in (.xlam or .xla) and place it in the XLSTART folder. This way, your macro will always be available for you, without getting in the way when you share your workbook with others.\nXLSTART Folder # The XLSTART folder is usually located in the path shown below. Any file placed in this folder will automatically open whenever Excel starts — whether it’s an .xlsx file, a .txt file, or anything else. XLSTART folder path :\nC:\\Users\\[User_name]\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART Add-in file(.xla or .xlam) # The .xla and .xlam files are Excel add-in files. When they are loaded from the XLSTART folder, they don’t open in a separate workbook window — instead, only the add-in features become available in Excel. This means they won’t interfere with the files you’re working on, keeping your workbooks clean while still giving you access to your personal macros.\nRibbon menu # Now, all you need to do is create a button on the Ribbon menu and start assigning your general-purpose macros to it one by one. This way, your favorite tools are always just a click away, no matter which workbook you’re working on.\nVBA code(ThisWorkbook in .xla file) :\nPrivate Sub workbook_open() \u0026#39;shorcut Application.OnKey \u0026#34;%+^q\u0026#34;, \u0026#34;showMenu\u0026#34; \u0026#39;ribbon menu icon With Application.CommandBars(\u0026#34;tools\u0026#34;) With .Controls.Add(msoControlButton) .Caption = \u0026#34;MacroToolKit\u0026#34; .OnAction = \u0026#34;showMenu\u0026#34; .FaceId = 6270 .Style = msoButtonIconAndCaption .Visible = True End With End With End Sub Private Sub Workbook_BeforeClose(Cancel As Boolean) Application.CommandBars(\u0026#34;tools\u0026#34;).Reset End Sub As shown in the image below, the Add-ins menu is now active, and you can see the buttons you’ve registered. If you want to change the icon, simply modify the Faceid value in the code.\nYou can check the Faceid at the following location:\nFaceid link Using VBA and Add-ins in PowerPoint # PowerPoint supports VBA (Visual Basic for Applications) similar to Excel, but there are some differences in how file formats and add-ins are handled. This document explains the key file types and how to use VBA in PowerPoint.\nDefault File Format: .pptx # When you open PowerPoint and create a new presentation, it is saved by default in the .pptx format. This is the standard presentation format, and it does not support macros.\nMacro-Enabled File Format: .pptm # If you want to insert VBA code or use macros in your presentation, you need to save the file as a .pptm file. Since .pptx files cannot store macros, PowerPoint requires macro-enabled presentations to be saved in the .pptm format.\nAdd-in File Format: .ppam # Just like Excel uses .xlam files for macro-based add-ins, PowerPoint uses .ppam files. A .ppam file contains VBA code only, without standard slide content. It is used to create custom add-ins that can extend PowerPoint\u0026rsquo;s functionality across all presentations.\nPowerPoint: Manual Add-in Registration # PowerPoint handles add-ins differently. It does not automatically load add-ins from a specific folder at startup. Instead, you need to manually register each .ppam file through the PowerPoint Add-ins menu.\nWhile Microsoft provides a default AddIns folder for convenience (which opens automatically when you browse for add-ins), you are not required to store your .ppam files there. You can register add-ins from any location.\nC:\\Users\\[username]\\AppData\\Roaming\\Microsoft\\AddIns\\ "},{"id":2,"href":"/python/04001/","title":"WebP Conversion Program","section":"Python","content":" WebP Conversion Program # What is it? # I once wrote about converting images to WebP for blog image optimization. However, uploading images online for conversion every time is a bit inconvenient, and using Photoshop for this is also not ideal.\nI downloaded a conversion program from the Google Dev site, but it requires entering commands in the CMD each time. This is also tedious, so I decided to create a simple Python program. I set up the program as shown below, making sure that Python is added to the Windows PATH so it can be run from anywhere.\npython.py ← The Python script file └── libwebp-1.4.0-windows-x64 ← Folder containing the WebP library By placing a batch file on the desktop (or anywhere else), you can easily execute the Python program. Just make sure the required Python packages are installed in advance.\nWhen you run it, the first file explorer window will let you select the file you want to convert, and the second will let you choose the folder where the converted file will be saved. Of course, you can also tweak the code to fix the target folder to any location you prefer.\nsample code # import os import tkinter from tkinter import filedialog from PIL import Image from PIL.ExifTags import TAGS def get_image_width(image_path): # Open the image with Image.open(image_path) as img: # Get the width return img.width if __name__ == \u0026#39;__main__\u0026#39;: # 폴더선택 root = tkinter.Tk() root.withdraw() file_path = filedialog.askopenfilenames( parent=root, initialdir=\u0026#34;/\u0026#34;, title=\u0026#39;Please select target files\u0026#39;) # 대상파일선택 dir_path = filedialog.askdirectory( parent=root, initialdir=\u0026#34;/\u0026#34;, title=\u0026#39;Please select saving directory\u0026#39;) # 저장폴더선택 programPath = os.getcwd() + \u0026#34;/libwebp-1.4.0-windows-x64/bin/cwebp.exe\u0026#34; # 프로그램저장경로(수정!!!) for fileConvertion in file_path : filename = os.path.basename(fileConvertion) name, extension = os.path.splitext(filename, ) # Example usage image_path = fileConvertion print(image_path) width = get_image_width(image_path) print(f\u0026#34;Image width: {width}\u0026#34;) if width \u0026gt; 700 : command = programPath + \u0026#39; \u0026#34;\u0026#39; + fileConvertion + \u0026#39;\u0026#34; -q 100 -resize 700 0 -o \u0026#34;\u0026#39; + dir_path + \u0026#39;/\u0026#39; + name + \u0026#39;.webp\u0026#34;\u0026#39; print(command) else : command = programPath + \u0026#39; \u0026#34;\u0026#39; + fileConvertion + \u0026#39;\u0026#34; -q 100 -o \u0026#34;\u0026#39; + dir_path + \u0026#39;/\u0026#39; + name + \u0026#39;.webp\u0026#34;\u0026#39; os.system(command=command) result # Because the size was also converted, the file size is greatly reduced. original post (Kor) "},{"id":3,"href":"/flutter/05001/","title":"Init Flutter APIs","section":"Flutter","content":" Init Flutter APIs # the Flutter framework and widget binding are initialized before you use any Flutter APIs.\nvoid main() async { WidgetsFlutterBinding.ensureInitialized(); // Example: Initialize Firebase or other async services await Firebase.initializeApp(); runApp(MyApp()); } original post (Kor) "},{"id":4,"href":"/windows_linux/06001/","title":"useful command","section":"Windows, Linux","content":" bypasses the script execution policy # a PowerShell command that temporarily bypasses the script execution policy for the current PowerShell session (process) only.\nSet-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass Path to Text # Normally, there\u0026rsquo;s little need to mess with Windows environment variables.\nHowever, if you\u0026rsquo;re using development tools or portable programs, you may need to register the PATH variable at least.\nWhen using multiple PCs, keeping these settings in sync can be a hassle. So, how about this?\nIf you type set in the Command Prompt, you can view all environment variables. Of course, this isn’t exactly its intended use, but…\nThis command below saves the environment variables to a TXT file at the specified path. Be sure to include the \u0026gt; symbol.\nset \u0026gt; c:\\[desired path to save the txt file]\\[filename].txt Since you can check the PATH settings in the TXT file, you can copy them and apply them to another PC as needed.\nThat’s it.\noriginal post (Kor) Shortcuts # control panel : control\ndisk manager : diskmgmt.msc\nregistry editor : regedit\nsevice management : services.msc\n"},{"id":5,"href":"/macrotoolkit-xls/01001/","title":"MacroToolkit-Excel","section":"MacroToolkit-Excel","content":" MacroToolkit-Excel # What is it? # Over the years of working extensively with Excel, I created macros for frequently used tasks. Although these were personal macros, I once shared them publicly hoping they might help others. However, whether offered for free or as paid tools, they never gained much traction, so I eventually withdrew all of them.\nKey Point # The main value lies not so much in any individual feature, but in gathering various macros into one place for easier management. To handle this, I used a UserForm, but surprisingly, the VB6 UserForm is quite outdated and lacks many features that we now take for granted—like support for PNG images, for example.\n→ Nonetheless, it serves well enough for organizing the macros.\nWhat I Learned # Somehow, I ended up accumulating knowledge more about peripheral topics than about the core of VBA itself.\n→ I looked into evilClippy because I was embarrassed to expose my code publicly.\n→ I explored xlwings for editing VBA code directly in VSCode.\nTutorial # Please refer to the YouTube video tutorial for more details.\nDownload # To keep track of versions, I’ve stored the files at the following location:\nv0.32(25.07) - layout modification : landscape → portrait\nv0.30(24.12) - some code optimization\nv0.29(24.04) - some code optimization\nv0.28(23.09) - Add language(Eng.)\nv0.27(23.07) - Add functions(removeDuplicates, PivotRefresh), some code optimization\nv0.26(23.06) - Add functions(colorRowDel), page tab, ribbon menu, shortcut for start\nv0.25(23.04) - Add functions(sheetNow)\nv0.24(23.03) - Add functions(tableToArray, checkDuplication, fontset, copyWidthHeight), Rearrange icons\nv0.23(23.02) - Add functions\nv0.22(22.12) - Add functions\nv0.20(22.10) - Add functions\nv0.21(22.10) - Redesign button\nv0.10(21.07) - first init\ngithub - download original post (Kor) "},{"id":6,"href":"/macrotoolkit-ppt/02001/","title":"MacroToolkit-powerpoint","section":"MacroToolkit-ppt","content":" What is it? # Since PowerPoint often requires manual work tailored to each specific scenario, it’s harder to create standardized features compared to Excel. For that reason, I’ve gathered useful code snippets I found through extensive web surfing. Feel free to review and modify them to fit your needs.\nKey Point # Instead of relying on UserForm, I made active use of the Ribbon menu to enhance usability.\nFunctions # name Description Make Table Creates frequently used table templates Table Size Adjusts table size via UserForm delblank Removes blanks created when copying tables in Excel; note it removes all spaces in the table RGB Color Displays RGB values of the selected shape via UserForm Color palette Creates a color palette in the slide master - newly added feature Text arrange Adjusts letter spacing of Malgun Gothic font to 0.3 zeromargin Sets margins of text boxes or shapes to zero tspacing Adjusts line spacing jpg export Exports selected slides as JPG files slide_resizes Changes slide size based on pixel dimensions groupRelease Ungroups all groups on all slides at once align_bottom Aligns selected shape(s) to the bottom of the first selected shape align_right Aligns selected shape(s) to the right of the first selected shape guidebox Creates guide boxes (rectangles) spaced at regular intervals Download # To manage versions, the files are stored at the following location:\ngithub - download original post (Kor) "},{"id":7,"href":"/windows_linux/06002/","title":"Windows10 Clipboard","section":"Windows, Linux","content":" Clipboard: Permanently Store Frequently Used Text # One of my favorite recent features in Windows 10 is the ability to save frequently used text in the clipboard and use it like a snippet whenever needed. You could use tools like sticker memos, but if you have text that you use very often, this method is by far the most efficient.\nMost people know that pressing Ctrl + C copies a single image or text to the clipboard. However, after copying with Ctrl + C, instead of pressing Ctrl + V, press Windows Key + V to open the clipboard history. You’ll see previously copied items, and you can click the one you want to paste. As mentioned earlier, if you want to store something permanently, click the three dots on the right and choose Pin. If your permanent items are pushed down due to too many copied entries, click Clear All so only your pinned items remain.\noriginal post (Kor) "},{"id":8,"href":"/flutter/05002/","title":"Windows Desktop Shortcut","section":"Flutter","content":" Windows Shortcut - Flutter Desktop # Inspiration # Organizing and keeping track of countless applications, folders, and web URLs scattered across Windows can be a tedious task. In that sense, Rainmeter is an excellent tool, offering a sleek way to manage and access resources directly from your desktop.\nThat said, there’s one drawback: adding new bookmarks is unnecessarily cumbersome. Of course, it’s understandable, since bookmark management was never intended to be one of Rainmeter’s core features.\nWouldn’t it be possible to build a simple, lightweight Flutter Windows application that provides just the essential functionality for quick and convenient bookmark management?\nStructure # I’ve already built the layout I wanted using Rainmeter, and it works perfectly fine for browsing my existing bookmarks. There’s no inconvenience when using them—my only frustration comes from how cumbersome it is to add or edit new bookmarks.\nIn the mockup below, the left side shows my current Rainmeter setup, while the right side illustrates the layout I’m considering implementing in Flutter. Since debugging will be necessary, I intentionally kept the window size compact rather than full-screen.\nTo simplify things, I don’t want to implement any in-app input fields. Instead, the application would rely on an accompanying JSON file for managing bookmarks. The horizontal width of the app would remain fixed, while the vertical height should automatically adjust based on the number of bookmarks.\nAdditionally, because icons alone can be ambiguous, I want to provide tooltip text that appears when hovering over each icon, so I can quickly recall what it represents.\nThat’s the overall concept I have in mind for this Flutter Windows app.\nResult # original post (Kor) "},{"id":9,"href":"/macrotoolkit-ppt/02002/","title":"└ Sctipt-table","section":"MacroToolkit-ppt","content":" Sctipt-table # What is it? # Useful functions for handling tables.\nMake Table # Creates frequently used table templates.\nSub tableMaker(control As IRibbonControl) On Error GoTo Err_Check Dim myt As shape Dim idx As Integer Dim cnum As Integer Dim rnum As Integer Dim c As Integer Dim r As Integer idx = ActiveWindow.View.slide.slideIndex Set myt = ActivePresentation.Slides(idx).Shapes.AddTable(4, 4) cnum = myt.Table.Columns.Count rnum = myt.Table.Rows.Count With myt.Table For c = 1 To cnum For r = 1 To rnum If r = 1 Then .cell(r, c).Borders(ppBorderTop).ForeColor.RGB = RGB(64, 64, 64) .cell(r, c).Borders(ppBorderTop).Weight = 0.5 .cell(r, c).Borders(ppBorderBottom).ForeColor.RGB = RGB(64, 64, 64) .cell(r, c).Borders(ppBorderBottom).Weight = 0.5 .cell(r, c).shape.Fill.ForeColor.RGB = RGB(242, 242, 242) Else .cell(r, c).shape.Fill.ForeColor.RGB = RGB(255, 255, 255) End If If c \u0026lt; cnum Then .cell(r, c).Borders(ppBorderRight).ForeColor.RGB = RGB(191, 191, 191) .cell(r, c).Borders(ppBorderRight).Weight = 0.5 End If If r \u0026gt; 1 And r \u0026lt; rnum Then .cell(r, c).Borders(ppBorderBottom).ForeColor.RGB = RGB(191, 191, 191) .cell(r, c).Borders(ppBorderBottom).Weight = 0.5 End If If r = rnum Then .cell(r, c).Borders(ppBorderBottom).ForeColor.RGB = RGB(64, 64, 64) .cell(r, c).Borders(ppBorderBottom).Weight = 0.5 End If .cell(r, c).shape.TextFrame.TextRange.Font.size = 12 .cell(r, c).shape.TextFrame.TextRange.Font.Bold = msoFalse .cell(r, c).shape.TextFrame.TextRange.Font.Name = \u0026#34;맑은 고딕\u0026#34; .cell(r, c).shape.TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0) .cell(r, c).shape.TextFrame.TextRange.ParagraphFormat.Alignment = ppAlignCenter .cell(r, c).shape.TextFrame.VerticalAnchor = msoAnchorMiddle Next r Next c End With Exit Sub Err_Check: If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;오류번호 : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; _ \u0026#34;오류내용 : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류 발생\u0026#34; End If End Sub Table Size # Adjusts table size via UserForm. → Refer to the .PPAM file for the userForm code.\ndelblank # Removes blanks created when copying tables in Excel; note it removes all spaces in the table\nSub delBlank() Dim shp As shape Dim i As Long Dim j As Long On Error GoTo ErrorHandler If ActiveWindow.Selection.Type = ppSelectionShapes Then For Each shps In ActiveWindow.Selection.ShapeRange Set shp = shps Exit For Next shps Else MsgBox \u0026#34;There is no table!\u0026#34;, vbExclamation GoTo dd End If If shp.HasTable Then For i = 1 To shp.Table.Rows.Count For j = 1 To shp.Table.Columns.Count shp.Table.Rows.Item(i).Cells(j).shape.TextFrame.TextRange.Text = _ Replace(shp.Table.Rows.Item(i).Cells(j).shape.TextFrame.TextRange.Text, \u0026#34; \u0026#34;, \u0026#34;\u0026#34;) shp.Table.Rows.Item(i).Cells(j).shape.TextFrame.TextRange.Text = _ Replace(shp.Table.Rows.Item(i).Cells(j).shape.TextFrame.TextRange.Text, \u0026#34;　\u0026#34;, \u0026#34;\u0026#34;) shp.Table.Rows.Item(i).Cells(j).shape.TextFrame.TextRange.Text = _ Replace(shp.Table.Rows.Item(i).Cells(j).shape.TextFrame.TextRange.Text, vbCr, \u0026#34;\u0026#34;) Next j Next i End If dd: Exit Sub ErrorHandler: MsgBox \u0026#34;An error occurred: \u0026#34; \u0026amp; Err.Description, vbCritical Resume dd End Sub "},{"id":10,"href":"/python/04002/","title":"Move file by extensions","section":"Python","content":" Create folders by file extension and move the file # What is it? # I created a program that, in a folder containing files with various types of extensions, generates folders only for the desired extensions and moves the corresponding files into them.\nWhen compiled into an exe file, it can run lightweight on Windows.\ncode sample # import os import tkinter from tkinter import filedialog import shutil # 폴더선택 root = tkinter.Tk() root.withdraw() dir_path = filedialog.askdirectory( parent=root, initialdir=\u0026#34;/\u0026#34;, title=\u0026#39;Please select a directory\u0026#39;) print(\u0026#34;\\ndir_path : \u0026#34;, dir_path) # 폴더내파일검사 global_cache = {} def cached_listdir(path): res = global_cache.get(path) if res is None: res = os.listdir(path) global_cache[path] = res return res def moveFile(ext, str): # 현재 파일 위치 filePath = dir_path + \u0026#39;/\u0026#39; + item # 옮길 파일 위치 finalPath = dir_path + \u0026#39;/\u0026#39; + str + \u0026#39;/\u0026#39; + item if os.path.isfile(filePath): shutil.move(filePath, finalPath) if __name__ == \u0026#39;__main__\u0026#39;: # 기본 폴더 생성 newdir = [\u0026#34;RAW\u0026#34;, \u0026#34;MOV\u0026#34;] for nd in newdir : newtDir = dir_path + \u0026#39;/\u0026#39; + nd if not os.path.isdir(newtDir): os.mkdir(newtDir) # 각 기본 폴더에 옮겨질 확장자 리스트 정의 extList = {\u0026#34;RAW\u0026#34; : [\u0026#34;arw\u0026#34;, \u0026#34;nef\u0026#34;], \u0026#34;MOV\u0026#34; : [\u0026#34;mov\u0026#34;, \u0026#34;mp4\u0026#34;], } for item in cached_listdir(dir_path): # RAW에 해당하는 확장자인 경우 for extItem in extList[\u0026#34;RAW\u0026#34;] : if item.rpartition(\u0026#34;.\u0026#34;)[2] == extItem : moveFile(extItem, \u0026#34;RAW\u0026#34;) # MOV에 해당하는 확장자인 경우 for extItem in extList[\u0026#34;MOV\u0026#34;] : if item.rpartition(\u0026#34;.\u0026#34;)[2] == extItem : moveFile(extItem, \u0026#34;MOV\u0026#34;) print(\u0026#34;complete\u0026#34;) original post (Kor) "},{"id":11,"href":"/vba/03002/","title":"Making Keyboard Shortcut","section":"VBA","content":" Making Keyboard Shortcut # what is it? # If you want to create a shortcut key to run an Excel macro, you can write the code as follows. The example below applies the shortcut key when the userform is launched.\nsample # You can set macro shortcut key with below:\n% : shift, ^ : control, + : alt\nSub showMenu() MyMacros.Show \u0026#39;shift + alt + 1 Application.OnKey \u0026#34;%+1\u0026#34;, \u0026#34;lineGrayDblClick\u0026#34; \u0026#39;macro name \u0026#39;shift + alt + 2 Application.OnKey \u0026#34;%+2\u0026#34;, \u0026#34;lineBlackDblClick\u0026#34; \u0026#39;shift + alt + 3 Application.OnKey \u0026#34;%+3\u0026#34;, \u0026#34;lineBlackBoldDblClick\u0026#34; \u0026#39;shift + alt + 4 Application.OnKey \u0026#34;%+4\u0026#34;, \u0026#34;colorFill\u0026#34; End Sub original post (Kor) "},{"id":12,"href":"/macrotoolkit-xls/01002/","title":"└ Script-Cell format","section":"MacroToolkit-Excel","content":" Script-Cell format # cell outline # lineGray # Remove the guidelines and create the gray line.\n→ click : outskirt of the cell range selected.\n→ double click : entire cell of the cell range selected. → keyboard shortcut : ALT + SHIFT + 1\nlineBlack # Remove the guidelines and create the black line.\n→ click : outskirt of the cell range selected.\n→ double click : entire cell of the cell range selected.\n→ keyboard shortcut : ALT + SHIFT + 2\nlineBlackBold # Remove the guidelines and create the bold black line.\n→ click : outskirt of the cell range selected.\n→ double click : entire cell of the cell range selected.\n→ keyboard shortcut : ALT + SHIFT + 3\ncolorFill # fill gray color on the cell selected. → keyboard shortcut : ALT + SHIFT + 4\nsetA4 # Adjust the page size for A4 size.\n→ recommended for new worksheet.\ncolorpicker # Copy the color of the selected cell and paste it to the cell that is selected.\ncopyWidthHeight # Copy the width \u0026amp; height of the selected cell and paste it to the cell that is selected.\n"},{"id":13,"href":"/python/04003/","title":"Extracting Tables from PDF","section":"Python","content":" Extracting Tables from PDF Documents # What is it? # I tried several methods for extracting tables from PDF files, and the method below seems to be the most effective - camelot package.\nHowever, for documents with heavy design elements, Python sometimes fails to recognize the tables correctly.\ncode sample # import camelot import pandas as pd from tkinter import Tk from tkinter.filedialog import askopenfilename, asksaveasfilename # Hide the main Tkinter window root = Tk() root.withdraw() # 1. Select a PDF file pdf_file = askopenfilename( title=\u0026#34;Select PDF File\u0026#34;, filetypes=[(\u0026#34;PDF files\u0026#34;, \u0026#34;*.pdf\u0026#34;)] ) if not pdf_file: print(\u0026#34;No PDF file selected.\u0026#34;) exit() # 2. Extract tables from the PDF using Camelot # \u0026#39;lattice\u0026#39;: for tables with lines, \u0026#39;stream\u0026#39;: for tables without lines tables = camelot.read_pdf(pdf_file, pages=\u0026#39;all\u0026#39;, flavor=\u0026#39;lattice\u0026#39;) if tables.n == 0: print(\u0026#34;No tables found in the PDF.\u0026#34;) exit() print(f\u0026#34;Number of tables found: {tables.n}\u0026#34;) # 3. Select the location to save the Excel file excel_file = asksaveasfilename( title=\u0026#34;Save as Excel\u0026#34;, defaultextension=\u0026#34;.xlsx\u0026#34;, filetypes=[(\u0026#34;Excel files\u0026#34;, \u0026#34;*.xlsx\u0026#34;)] ) if not excel_file: print(\u0026#34;No Excel file selected.\u0026#34;) exit() # 4. Save all extracted tables into an Excel file, each table in a separate sheet with pd.ExcelWriter(excel_file, engine=\u0026#39;openpyxl\u0026#39;) as writer: for i, table in enumerate(tables): sheet_name = f\u0026#34;Table_{i+1}\u0026#34; # Sheet name for each table table.df.to_excel(writer, index=False, sheet_name=sheet_name) print(f\u0026#34;Excel file saved successfully: {excel_file}\u0026#34;) original post (Kor) "},{"id":14,"href":"/life/08003/","title":"SW - PicPick","section":"Life","content":" The Most Powerful Screenshot Tool # SW in work # It might be the same in other countries, but in Korea, software usage for businesses is strictly regulated. Still, there are many situations at work where I need simple tools like image or video viewers, or screenshot programs. Finding a tool that balances both licensing policies and functionality can be quite a challenge.\nPicPick # Recently, PicPick added support for the WebP format, making it the program that now has all the features I was looking for.\nDownload Page "},{"id":15,"href":"/flutter/05003/","title":"Windows Click Animation","section":"Flutter","content":" Windows Mouse Click Animation(Lottie) # What is it? # Adding mouse click or touch motion in a Flutter app is no big deal. But what about apps running on Windows 10? If you can use Lottie animations, you could turn boring click motions into something that feels like a macOS app…\nWindows has a long history, but since Vista, I haven’t really come across programs or open-source projects that deal with click animations. Sure, it’s mostly a trivial feature, but the built-in Windows functionality is just… terrible.\nStill, I decided to give it a try.\nTwo Scenarios # Send the click coordinates from Windows to Flutter\nYou run the Flutter app as an invisible layer, and when click coordinates are received, it plays an animation.\nSend the clicked coordinates from Flutter to Windows\nFlutter plays the animation, and the coordinates sent to Windows trigger the actual click.\nThese are simple scenarios, but ChatGPT recommended #2. Following that advice led to a few days of trial and error. Eventually, I realized that #1 is the reliable approach.\nWin32 and FFI # On Flutter Android, whenever you try to do anything, you often need to touch native code—and it can easily break. Windows is no different: you have to deal with C++.\nThere are two ways to do this: write everything in Dart, or build a C++ DLL in Visual Studio and call it from Flutter.\nSince I had no idea if it would even work, I did it for fun. Otherwise, I would have given up immediately.\nScenario Details # Flutter runs the DLL file. Windows, via the DLL, writes click coordinates to a text file whenever a click occurs. Flutter reads the coordinates from the text file and uses them to determine where to play the animation. The Flutter app runs fullscreen with a transparent background, in the background. Packages Used # For controlling the DLL, we just import io and ffi. For window management, we use window_manager. To play animations, we use the lottie package.\nCalling the DLL # The DLL must be executed from main(). I didn’t know why, but following ChatGPT’s instructions, it should be defined like this.\ntypedef StartHookThreadC = Void Function(); typedef StartHookThreadDart = void Function(); You run the startHookThread function. Its only function is to save click coordinates in C:\\temp. Flutter only reads the coordinates saved in the text file.\nfinal dylib = DynamicLibrary.open(\u0026#39;click_hooking.dll\u0026#39;); final StartHookThreadDart startHookThread = dylib .lookupFunction\u0026lt;StartHookThreadC, StartHookThreadDart\u0026gt;(\u0026#39;StartHookThread\u0026#39;); startHookThread(); Lottie Animation # Rive provides incredible features, but Lottie just runs animations—and that’s perfect. You don’t need a full authoring tool like Rive to create animations; After Effects and Bodymovin can handle it.\nBy using a Stack with Positioned widgets, you can play click animations exactly where you want, ending this tedious setup.\nFirst, here’s the C++ source code that needs to be built as a DLL using Visual Studio.\nmouse_hook.cpp\n#include \u0026lt;windows.h\u0026gt; #include \u0026#34;pch.h\u0026#34; #include \u0026lt;fstream\u0026gt; #include \u0026lt;string\u0026gt; HHOOK mouseHook; std::string outputPath = \u0026#34;C:\\\\Temp\\\\click_position.txt\u0026#34;; LRESULT CALLBACK MouseProc(int nCode, WPARAM wParam, LPARAM lParam) { if (nCode \u0026gt;= 0 \u0026amp;\u0026amp; wParam == WM_LBUTTONDOWN) { MSLLHOOKSTRUCT* mouseInfo = (MSLLHOOKSTRUCT*)lParam; int x = mouseInfo-\u0026gt;pt.x; int y = mouseInfo-\u0026gt;pt.y; std::ofstream out(outputPath); if (out.is_open()) { out \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34;,\u0026#34; \u0026lt;\u0026lt; y; out.close(); // log(\u0026#34;Click detected: \u0026#34; + std::to_string(x) + \u0026#34;,\u0026#34; + std::to_string(y)); } } return CallNextHookEx(mouseHook, nCode, wParam, lParam); } void SetClickHook() { // log(\u0026#34;SetClickHook called\u0026#34;); HMODULE hInstance = GetModuleHandle(NULL); mouseHook = SetWindowsHookEx(WH_MOUSE_LL, MouseProc, hInstance, 0); if (mouseHook == NULL) { //log(\u0026#34;Failed to set mouse hook\u0026#34;); MessageBoxW(NULL, L\u0026#34;Failed to set hook\u0026#34;, L\u0026#34;Error\u0026#34;, MB_ICONERROR); return; } //log(\u0026#34;Mouse hook successfully set\u0026#34;); MSG msg; while (GetMessage(\u0026amp;msg, NULL, 0, 0)) { TranslateMessage(\u0026amp;msg); DispatchMessage(\u0026amp;msg); } // log(\u0026#34;Message loop exited\u0026#34;); } extern \u0026#34;C\u0026#34; __declspec(dllexport) void RemoveClickHook() { if (mouseHook) { UnhookWindowsHookEx(mouseHook); // log(\u0026#34;Mouse hook removed\u0026#34;); } } DWORD WINAPI HookThreadProc(LPVOID) { SetClickHook(); return 0; } extern \u0026#34;C\u0026#34; __declspec(dllexport) void StartHookThread() { // log(\u0026#34;Starting hook thread...\u0026#34;); CreateThread(NULL, 0, HookThreadProc, NULL, 0, NULL); } On the Flutter side, there isn’t much to configure, but calling the DLL itself was a bit unfamiliar.\nAlso, even when using a dual-monitor setup, I limited the mouse click animation to appear only within the range from coordinate (0,0) up to 1920×1080.\nFor the Lottie animation specified in assets/click2.json, make sure to update the file name if necessary. Alternatively, you could add a feature to dynamically select different motions. Currently, the default animation duration is set to under 0.8 seconds. If you use a different animation length, you’ll need to adjust the duration code accordingly.\nmain.dart\nimport \u0026#39;dart:async\u0026#39;; import \u0026#39;dart:ffi\u0026#39;; import \u0026#39;dart:io\u0026#39;; import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:lottie/lottie.dart\u0026#39;; import \u0026#39;package:window_manager/window_manager.dart\u0026#39;; // // // DLL 메서드 정의 typedef StartHookThreadC = Void Function(); typedef StartHookThreadDart = void Function(); // // // main void main() async { WidgetsFlutterBinding.ensureInitialized(); await windowManager.ensureInitialized(); await windowManager.waitUntilReadyToShow( WindowOptions( skipTaskbar: false, alwaysOnTop: true, fullScreen: true, backgroundColor: Colors.transparent, ), () async { await windowManager.setIgnoreMouseEvents(true); await windowManager.setPosition(Offset.zero); await windowManager.show(); debugPrint(\u0026#34;✅ Window manager initialized\u0026#34;); }, ); debugPrint(\u0026#34;📦 Loading DLL...\u0026#34;); final dylib = DynamicLibrary.open(\u0026#39;click_hooking.dll\u0026#39;); final StartHookThreadDart startHookThread = dylib .lookupFunction\u0026lt;StartHookThreadC, StartHookThreadDart\u0026gt;(\u0026#39;StartHookThread\u0026#39;); startHookThread(); debugPrint(\u0026#34;🔗 Setting mouse hook...\u0026#34;); startHookThread(); debugPrint(\u0026#34;✅ Mouse hook thread started\u0026#34;); runApp(const MyApp()); } // // //MyApp class MyApp extends StatelessWidget { const MyApp({super.key}); @override Widget build(BuildContext context) { return MaterialApp( debugShowCheckedModeBanner: false, home: LayoutBuilder( builder: (context, constraints) { return SizedBox( width: constraints.maxWidth, height: constraints.maxHeight, child: ClickEffectOverlay(), ); }, ), ); } } class ClickEffectOverlay extends StatefulWidget { const ClickEffectOverlay({super.key}); @override State\u0026lt;ClickEffectOverlay\u0026gt; createState() =\u0026gt; _ClickEffectOverlayState(); } class _ClickEffectOverlayState extends State\u0026lt;ClickEffectOverlay\u0026gt; { final List\u0026lt;_ClickEffect\u0026gt; _effects = []; @override void initState() { super.initState(); WidgetsBinding.instance.addPostFrameCallback((_) { final size = MediaQuery.of(context).size; debugPrint(\u0026#34;📏 화면 크기: ${size.width} x ${size.height}\u0026#34;); }); _startListeningForMessages(); } void _startListeningForMessages() { debugPrint(\u0026#34;📡 Start listening for click coordinates...\u0026#34;); Timer.periodic(const Duration(milliseconds: 100), (_) { _readClickPosition(); }); } void _readClickPosition() async { final file = File(\u0026#39;C:/Temp/click_position.txt\u0026#39;); if (await file.exists()) { final content = await file.readAsString(); final parts = content.trim().split(\u0026#39;,\u0026#39;); if (parts.length == 2) { final xRaw = double.tryParse(parts[0]); final yRaw = double.tryParse(parts[1]); if (xRaw != null \u0026amp;\u0026amp; yRaw != null \u0026amp;\u0026amp; xRaw != 0 \u0026amp;\u0026amp; yRaw != 0) { // MediaQuery로 DPI 값 얻기 final dpiScale = MediaQuery.of(context).devicePixelRatio; // 클릭 위치를 DPI 스케일에 맞게 변환 final x = xRaw / dpiScale; final y = yRaw / dpiScale; debugPrint(\u0026#39;📍 Scaled click: x = $x, y = $y\u0026#39;); _showClickEffect(Offset(x, y)); await file.writeAsString(\u0026#39;0,0\u0026#39;); // 중복 방지 } } } } void _showClickEffect(Offset offset) { // 화면 크기 내에서만 애니메이션을 표시하도록 조건 추가 if (offset.dx \u0026lt; 0 || offset.dy \u0026lt; 0 || offset.dx \u0026gt; 1920 || offset.dy \u0026gt; 1080) return; setState(() { _effects.add(_ClickEffect(offset)); }); Timer(const Duration(milliseconds: 800), () { if (_effects.isNotEmpty) { setState(() { _effects.removeAt(0); }); } }); } @override Widget build(BuildContext context) { final size = MediaQuery.of(context).size; final ratio = MediaQuery.of(context).devicePixelRatio; debugPrint(\u0026#34;📐 화면 크기: ${size.width} x ${size.height}, DPI: $ratio\u0026#34;); return Container( color: Color.fromRGBO(1, 1, 1, 0.01), child: Stack( children: [ ..._effects .where( (e) =\u0026gt; e.offset.dx \u0026gt;= 0 \u0026amp;\u0026amp; e.offset.dx \u0026lt;= 1920 \u0026amp;\u0026amp; e.offset.dy \u0026gt;= 0 \u0026amp;\u0026amp; e.offset.dy \u0026lt;= 1080, ) .map((e) { return Positioned( left: e.offset.dx - 50, top: e.offset.dy - 50, child: SizedBox( width: 100, height: 100, child: Lottie.asset(\u0026#39;assets/click2.json\u0026#39;), ), ); }) .toList(), ], ), ); } } class _ClickEffect { final Offset offset; _ClickEffect(this.offset); } Result # For click motions, a simple one-time animation is enough. You don’t need Rive animations, and LottieFiles provides animations you can download and use easily without much effort.\nThe GIF below shows the result with a Lottie animation. The quality isn’t bad at all—though the GIF format makes it look slightly choppy.\nShould I add a separate button to change the animation?\nShould right-clicks have a separate animation?\nNo. That was just my thought process—so let’s leave it cleanly here.\nThe End.\noriginal post (Kor) "},{"id":16,"href":"/macrotoolkit-ppt/02003/","title":"└ Sctipt-color","section":"MacroToolkit-ppt","content":" Sctipt-color # What is it? # Useful functions for handling color.\nRGB_color # Displays RGB values of the selected shape via UserForm. → Refer to the .PPAM file for the userForm code.\nColor_palette # Creates a color palette in the slide master - newly added feature.\nSub pal2() Dim mySlideMaster As Master Dim left As Integer Dim top As Integer Dim size As Integer Dim idx As Integer Dim rgb1 As Long Dim rgb2 As Long Dim hexcolor As String Dim colred As Integer Dim colgreen As Integer Dim colblue As Integer Dim newcol As String Dim pagenum As Integer On Error GoTo Err_Check Set mySlideMaster = Application.ActivePresentation.slideMaster If MsgBox(\u0026#34;do you wanna set default?\u0026#34;, vbYesNo) = vbNo Then If MsgBox(\u0026#34;do you wanna use HEX color data?\u0026#34;, vbYesNo) = vbYes Then On Error GoTo Err_Check hexcolor = InputBox(\u0026#34;your hex color\u0026#34;) newcol = HexToRGB(hexcolor) colred = Replace(Split(newcol, \u0026#34;,\u0026#34;)(0), \u0026#34; \u0026#34;, \u0026#34;\u0026#34;) colgreen = Replace(Split(newcol, \u0026#34;,\u0026#34;)(1), \u0026#34; \u0026#34;, \u0026#34;\u0026#34;) colblue = Replace(Split(newcol, \u0026#34;,\u0026#34;)(2), \u0026#34; \u0026#34;, \u0026#34;\u0026#34;) idx = InputBox(\u0026#34;index\u0026#34;) Else On Error GoTo Err_Check colred = InputBox(\u0026#34;type R\u0026#34;) colgreen = InputBox(\u0026#34;type G\u0026#34;) colblue = InputBox(\u0026#34;type B\u0026#34;) idx = InputBox(\u0026#34;index\u0026#34;) If colred \u0026lt; 0 Or colgreen \u0026lt; 0 Or colblue \u0026lt; 0 Or idx \u0026lt;= 0 Then MsgBox \u0026#34;Invalid input values\u0026#34;, vbCritical GoTo Err_Check2 End If End If top = 0 left = -25 size = 20 With mySlideMaster.Shapes.AddShape(Type:=msoShapeRectangle, left:=left, top:=topcal(idx, size), width:=size, height:=size) .Fill.ForeColor.RGB = RGB(colred, colgreen, colblue) .line.Visible = msoFalse End With Else rgb1 = RGB(0, 63, 104) rgb2 = RGB(237, 116, 35) For x = 1 To 4 counter = counter + 1 With mySlideMaster.Shapes.AddShape(Type:=msoShapeRectangle, left:=-25, top:=((x - 1) * 20) + (ConvertCmToPoint(0.3) * (x - 1)), width:=20, height:=20) If x = 1 Then .Fill.ForeColor.RGB = rgb1 ElseIf x = 2 Then .Fill.ForeColor.RGB = rgb2 Else .Fill.ForeColor.RGB = RGB(0, 0, 0) End If .line.Visible = msoFalse End With Next x End If Exit Sub Err_Check: If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;오류번호 : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; \u0026#34;오류내용 : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류\u0026#34; End If Exit Sub Err_Check2: MsgBox \u0026#34;you have wrong input value\u0026#34;, vbCritical, \u0026#34;잘못된 입력\u0026#34; Exit Sub End Sub Function topcal(idx As Integer, size As Integer) If idx = 1 Then topcal = 0 Else topcal = ((idx - 1) * size) + (ConvertCmToPoint(0.3) * (idx - 1)) End If End Function Function ConvertPointToCm(ByVal pnt As Double) As Double ConvertPointToCm = pnt * 0.03527778 End Function Function ConvertCmToPoint(ByVal cm As Double) As Double ConvertCmToPoint = cm * 28.34646 End Function Function HexToRGB(hexcolor As String) As String Dim r As Integer Dim G As Integer Dim B As Integer Dim newrgbcolor As String On Error GoTo Err_Check hexcolor = Replace(hexcolor, \u0026#34;#\u0026#34;, \u0026#34;\u0026#34;) hexcolor = Right$(\u0026#34;000000\u0026#34; \u0026amp; hexcolor, 6) r = val(\u0026#34;\u0026amp;H\u0026#34; \u0026amp; Mid(hexcolor, 1, 2)) G = val(\u0026#34;\u0026amp;H\u0026#34; \u0026amp; Mid(hexcolor, 3, 2)) B = val(\u0026#34;\u0026amp;H\u0026#34; \u0026amp; Mid(hexcolor, 5, 2)) newrgbcolor = r \u0026amp; \u0026#34;, \u0026#34; \u0026amp; G \u0026amp; \u0026#34;, \u0026#34; \u0026amp; B Debug.Print newrgbcolor HexToRGB = newrgbcolor Exit Function Err_Check: If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;오류번호 : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; \u0026#34;오류내용 : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류\u0026#34; End If Exit Function End Function "},{"id":17,"href":"/vba/03003/","title":"Hover effect","section":"VBA","content":" Hover effect in VBA # Take #1 # When did VB6—the foundation of VBA—officially lose technical support? It’s quite unfortunate that one of the few programming languages familiar and accessible to non-developers and marketers at work is based on technology from decades ago.\nCompared to today’s technologies, it might be natural that it shows its limitations. Today, I’m attempting a workaround to implement a mouse hover effect on an object used as a button.\nTake #2 # Create image pairs for default and hover states. Since changing colors later requires regenerating all images, you need to choose carefully. Overlay the two images: place the hover image on top with its Visible property set to False, and the default image underneath.\nThen, place a transparent label covering the entire page background. Using the MouseMove event on the default image, set the hover image’s Visible to True on mouse over.\nFinally, use the MouseMove event on the transparent label to set the hover image’s Visible back to False when the mouse moves away.\nTake #3 # Here is the result\nbutton - over\nPrivate Sub btn1_1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single) btn1_1.Visible = False btn1_1_2.Visible = True End Sub button - out\nPrivate Sub transparent_bg0_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single) btn1_1.Visible = True btn1_1_2.Visible = False End Sub original post (Kor) "},{"id":18,"href":"/macrotoolkit-xls/01003/","title":"└ Script-Value format","section":"MacroToolkit-Excel","content":" Script-Value format # Number format # formatNum_normal # Change to a normal number format.\n[yes - with right padding(accounting)] #,##0_-;[Red]-#,##0_-;-_-\n[no - without right padding] #,##0;[Red]-#,##0;-\nformatNum_thousand # Change in a thousand unit number format.\n[yes - with right padding(accounting)] #,##0,-;[Red]-#,##0,-;-_-\n[no - without right padding] #,##0,;[Red]-#,##0,;-\nformatNum_mil # Change in a million unit number format.\n[yes - with right padding(accounting)] #,##0,,-;[Red]-#,##0,,-;-_-\n[no - without right padding] #,##0,,;[Red]-#,##0,,;-\nformatNum_date # Change to a date format containing the day.\n[yes - with day of the week] yyyy-mm-dd(aaa)\n[no - without day of the week] yyyy-mm-dd\ndelHyperlink # Delete hyperlinks. The format is all erased together.\ndelBlank # Delete all the spaces of the selected cell.\n"},{"id":19,"href":"/vba/03004/","title":"Project is Unviewable","section":"VBA","content":" How to protect your VBA code? # Project is Unviewable # When working with VBA add-ins, you might sometimes see a message that says “Project is unviewable.” This means that you won’t be able to access or review the code inside certain files. It can be a bit puzzling at first, but it usually happens because the project has been locked or restricted by the developer.\nEvilClippy # At first, I thought this was something that could only be done with paid software. But while searching on Google, I came across a tool called EvilClippy. With this program, it looks like you can not only apply protection but also add code obfuscation, making the VBA project harder to read.\nEvilClippy Github How to use # As described in the readme file, you can download the C# source code and compile it using Visual Studio:\nmcs /reference:OpenMcdf.dll,System.IO.Compression.FileSystem.dll /out:EvilClippy.exe *.cs This will generate the EvilClippy.exe file. You can then use this executable to transform your VBA file:\nEvilClippy.exe -u yourmacrofile.XXX Result # Whether the original purpose of this tool was for hacking or something else, I intend to use it while respecting the requirements set by the creators who generously shared it.\nI just feel a bit limited by my own understanding of it.\nThanks, Stan.\n"},{"id":20,"href":"/flutter/05004/","title":"Hiding Google API key","section":"Flutter","content":" Hiding Google API key # No one really tells you this… # I’ve been using the Google Sheets API quite well.\nThe problem is that the API key was just hardcoded in a JSON file, and when I pressed F12 in Chrome, the API key was completely exposed. After some Googling… of course, I realized I was the only one who hadn’t thought about handling these security issues. I’m not sure what programming language the tutorials were for, but there are several ways to hide an API key that are easy to find online. However, I couldn’t find a post that explained a method that could be directly used in Flutter, so I got a bit lazy. In the end, I had no choice but to follow whatever method I could. The easiest solution I found was using a .env file. I have no idea how secure this actually is, but at least Flutter has packages for .env files. I installed the dot_env package and tried testing it…\nMaking Line Breaks (\\n) Work in a .env File # Loading single values works fine, but loading an entire JSON object was tricky. There are several suggested solutions online, but with my limited experience, they only added confusion.\nI decided it would be easier to just call individual values, organize them into a map, and then encode them as a JSON file.\nvar cremap = { \u0026#34;type\u0026#34;: dotenv.get(\u0026#34;type\u0026#34;), \u0026#34;project_id\u0026#34;: dotenv.get(\u0026#34;project_id\u0026#34;), \u0026#34;private_key_id\u0026#34;: dotenv.get(\u0026#34;private_key_id\u0026#34;), \u0026#34;private_key\u0026#34;: dotenv.get(\u0026#34;private_key\u0026#34;), \u0026#34;client_email\u0026#34;: dotenv.get(\u0026#34;client_email\u0026#34;), \u0026#34;client_id\u0026#34;: dotenv.get(\u0026#34;client_id\u0026#34;), \u0026#34;auth_uri\u0026#34;: dotenv.get(\u0026#34;auth_uri\u0026#34;), \u0026#34;token_uri\u0026#34;: dotenv.get(\u0026#34;token_uri\u0026#34;), \u0026#34;auth_provider_x509_cert_url\u0026#34;: dotenv.get(\u0026#34;auth_provider_x509_cert_url\u0026#34;), \u0026#34;client_x509_cert_url\u0026#34;: dotenv.get(\u0026#34;client_x509_cert_url\u0026#34;), \u0026#34;universe_domain\u0026#34;: dotenv.get(\u0026#34;universe_domain\u0026#34;) }; var cremapJson = jsonEncode(cremap); final gsheets = GSheets(cremapJson); I carefully organized the individual values into Map. But unsurprisingly, I quickly ran into another problem: the private_key field in the Google API key requires line breaks (\\n).\nHow do you make the line breaks recognized…? I had no choice but to reopen Google and spent a long time searching.\nSurprisingly, the solution was simple: wrap the value in double quotes (\u0026quot; \u0026ldquo;), and the line breaks (\\n) are recognized.\nMy lack of understanding of .env files caused this expected fiasco. At least now, my API key information no longer appears in the JS files.\ntype = service_account private_key = \u0026#34;-----BEGIN PRIVATE KEY-----\\nMI For now, that’s it.\nThe End.\noriginal post (Kor) "},{"id":21,"href":"/macrotoolkit-ppt/02004/","title":"└ Sctipt-text","section":"MacroToolkit-ppt","content":" Sctipt-text # What is it? # Useful functions for handling text.\nText arrange # Adjusts letter spacing of Malgun Gothic font to 0.3.\nzeromargin # Sets margins of text boxes or shapes to zero.\nSub textMarginZero() On Error GoTo Err_Check \u0026#39; 에러 발생 시 Err_Check로 이동 Dim shp As shape Dim activeshape As shape Dim myt As Table Dim z As Double Dim dtb As Double Dim dlr As Double \u0026#39; 선택된 도형이 있는지 확인 If ActiveWindow.Selection.Type = ppSelectionShapes Then For Each shp In ActiveWindow.Selection.ShapeRange Set activeshape = shp Exit For Next shp Else MsgBox \u0026#34;There is no shape currently selected!\u0026#34;, vbExclamation, \u0026#34;No Shape Found\u0026#34; Exit Sub End If z = 0 dlr = ConvertCmToPoint(0.13) dtb = ConvertCmToPoint(0.25) \u0026#39; 메시지 박스에서 사용자가 선택한 값을 처리 If MsgBox(\u0026#34;To Zero : Yes, To Default : No\u0026#34;, vbYesNo) = vbYes Then If shp.HasTable Then Set myt = shp.Table cnum = myt.Columns.Count rnum = myt.Rows.Count \u0026#39; 테이블 내의 셀에 마진 값 적용 With myt For c = 1 To cnum For r = 1 To rnum .cell(r, c).shape.TextFrame2.MarginTop = z .cell(r, c).shape.TextFrame2.MarginBottom = z .cell(r, c).shape.TextFrame2.MarginLeft = z .cell(r, c).shape.TextFrame2.MarginRight = z .cell(r, c).shape.TextFrame2.VerticalAnchor = msoAnchorMiddle Next r Next c End With Else \u0026#39; 테이블이 아닌 경우 일반 텍스트 상자의 마진 값 적용 With shp.TextFrame2 .MarginTop = z .MarginBottom = z .MarginLeft = z .MarginRight = z .VerticalAnchor = msoAnchorMiddle End With End If Else If shp.HasTable Then Set myt = shp.Table cnum = myt.Columns.Count rnum = myt.Rows.Count \u0026#39; 테이블 내의 셀에 기본 마진 값 적용 With myt For c = 1 To cnum For r = 1 To rnum .cell(r, c).shape.TextFrame2.MarginTop = dtb .cell(r, c).shape.TextFrame2.MarginBottom = dtb .cell(r, c).shape.TextFrame2.MarginLeft = dlr .cell(r, c).shape.TextFrame2.MarginRight = dlr .cell(r, c).shape.TextFrame2.VerticalAnchor = msoAnchorMiddle Next r Next c End With Else \u0026#39; 테이블이 아닌 경우 일반 텍스트 상자의 기본 마진 값 적용 With shp.TextFrame2 .MarginTop = dtb .MarginBottom = dtb .MarginLeft = dlr .MarginRight = dlr .VerticalAnchor = msoAnchorMiddle End With End If End If Exit Sub Err_Check: If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;오류번호 : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; _ \u0026#34;오류내용 : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류 발생\u0026#34; End If End Sub Function ConvertPointToCm(ByVal pnt As Double) As Double ConvertPointToCm = pnt * 0.03527778 End Function Function ConvertCmToPoint(ByVal cm As Double) As Double ConvertCmToPoint = cm * 28.34646 End Function "},{"id":22,"href":"/macrotoolkit-xls/01004/","title":"└ Script-Function","section":"MacroToolkit-Excel","content":" Script-Function # savebysheetname # Save each sheet as a separate file.\ncoloredRowDel # Delete the row of the colored cell from the selected area.\nHandling Duplication # checkDuplication # In the selected area, color the redundant value.\nremoveDuplicates # Remove the duplicate value from the value of the selected area and make and paste a new sheet.\nclearFilter # clear all filters.\nfontset # Set the font of active sheet to \u0026ldquo;Segoe UI\u0026rdquo; 10pt.\n→ if using Korean apply \u0026ldquo;Malgun Gothic\u0026rdquo;\n"},{"id":23,"href":"/vba/03005/","title":"Error Handler","section":"VBA","content":" Error Handler # Error Handler with a Class Module # In VBA, where classes are not frequently used, you might wonder if it’s really necessary to implement an error handler as a class module. Still, compared to writing multiple lines of repetitive code, it might offer a slight improvement—so I decided to give it a try.\nyour Module # Dim eh As New ErrorHandler \u0026#39;your codes On Error GoTo Err_Handler \u0026#39;your codes Err_Handler: eh.CheckError your Class Modues - ErrorHandler # Option Explicit Public Sub CheckError() If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;errNo : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; _ \u0026#34;err : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;Error\u0026#34; Err.Clear End If End Sub That said, you still end up writing around four lines of code, so in practice, the benefit may not be that significant.\n"},{"id":24,"href":"/life/08005/","title":"APS-C lens on FullFrame","section":"Life","content":" Using an APS-C Lens on a Full-Frame Camera # A7C2, Sigma 56mm # Normally, crop lenses with a smaller image circle tend to reveal frustrating black edges when used on full-frame cameras. However, some lenses have an unusually large image circle, making them usable even on full-frame bodies. One of my favorite lenses in this category is the Sigma 56mm.\nThe shape of the image circle becomes more defined as you stop down the aperture, so I tried shooting at the maximum aperture to see the effect.\nExplaining this in words is not very meaningful, so all the explanations are replaced with sample photos.\nWithout Post-Editing… # Even if you try to avoid it, cropping during post-processing can be really tedious. I try to preserve the full field of view when shooting, but in the end, I often end up cropping anyway. Since the amount of vignetting varies from photo to photo, I used to adjust each one individually. However, I recently discovered the aspect ratio tool in Lightroom, and I’ve been using it frequently.\nOn Nikon cameras, there’s not just the x1.5 crop mode but also an x1.2 option, so you don’t even have to worry about this. But what could work on the C2? While thinking about it, I remembered that the aspect ratio feature I mentioned earlier in Lightroom is also available on Sony bodies under the name “Screen Ratio.” By adjusting the screen ratio like this, I thought it would be much better than blindly using crop mode.\nRatio W H Pixels Pixels (MP) Crop Ratio 3:2 7,008 4,672 32,741,376 33MP 100% 4:3 6,224 4,672 29,078,528 29MP 89% 16:9 7,008 3,944 27,639,552 28MP 84% 1:1 4,672 4,672 21,827,584 22MP 67% crop-mode 4,608 3,072 14,155,776 14MP 43% Test # Here’s what the simulation looks like.\n3:2 4:3 16:9 1:1 Unfortunately, the screen ratios provided by the camera body are limited to this. It would have been nice if custom options were included, but I wonder how many people are really going to go through the trouble of using a crop lens.\nAlso, I’ve occasionally read online that cropping the sensor can be harmful to it. Personally, I think that’s nonsense—but I can’t help but wonder if such creative claims came completely without any basis.\nIn conclusion… using what you already have is fine, but buying one specifically for this purpose seems unnecessary. It might be better to invest in a cost-effective lens like a Viltrox instead.\nWith Post-Editing # If you’re using an editing program like Lightroom, cropping to a 5:4 or 4:5 aspect ratio is quite simple. This adjustment helps minimize vignetting.\nRatio W H Pixels Pixels (MP) Crop Ratio 5:4 5,841 4,672 27,289,152 27MP 87% On the camera, you can preview a 5:4 crop using the guideline option. Fortunately, the guideline feature includes a 5:4 aspect ratio.\noriginal post (Kor) "},{"id":25,"href":"/macrotoolkit-ppt/02005/","title":"└ Sctipt-slide","section":"MacroToolkit-ppt","content":" Sctipt-slide # What is it? # Useful functions for handling slide.\njpg export # Exports selected slides as JPG files.\nSub jpgExport() Dim pptPres As Presentation Dim filePath As String Dim slidenum As String Dim slicePageNum() As String Dim pagenum As Integer Dim i As Integer On Error GoTo Err_Check Set pptPres = ActivePresentation If pptPres.Path = \u0026#34;\u0026#34; Then MsgBox \u0026#34;프레젠테이션이 파일로 저장되지 않았습니다. 저장 후 다시 시도하세요.\u0026#34;, vbExclamation Exit Sub Else filePath = pptPres.Path End If slidenum = InputBox(\u0026#34;Input PageNumber\u0026#34;) If InStr(slidenum, \u0026#34;,\u0026#34;) Then slicePageNum = Split(Replace(slidenum, \u0026#34; \u0026#34;, \u0026#34;\u0026#34;), \u0026#34;,\u0026#34;) For i = LBound(slicePageNum) To UBound(slicePageNum) On Error Resume Next pagenum = CInt(slicePageNum(i)) If IsNumeric(pagenum) And pagenum \u0026lt;= pptPres.Slides.Count Then With pptPres.Slides(pagenum) .Export filePath \u0026amp; \u0026#34;\\Slide\u0026#34; \u0026amp; pagenum \u0026amp; \u0026#34;.jpg\u0026#34;, \u0026#34;JPG\u0026#34; End With Else MsgBox \u0026#34;non-numeric value or wrong page number: \u0026#34; \u0026amp; slicePageNum(i), vbExclamation End If On Error GoTo Err_Check Next i Else pagenum = CInt(slidenum) If IsNumeric(pagenum) And pagenum \u0026lt;= pptPres.Slides.Count Then With pptPres.Slides(pagenum) .Export filePath \u0026amp; \u0026#34;\\Slide\u0026#34; \u0026amp; pagenum \u0026amp; \u0026#34;.jpg\u0026#34;, \u0026#34;JPG\u0026#34; End With Else MsgBox \u0026#34;non-numeric value or wrong page number\u0026#34;, vbExclamation Exit Sub End If End If MsgBox \u0026#34;export complete\u0026#34; Exit Sub Err_Check: MsgBox \u0026#34;오류번호: \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; \u0026#34;오류내용: \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류 발생\u0026#34; Exit Sub End Sub slide_resizes # Changes slide size based on pixel dimensions.\ngroupRelease # Ungroups all groups on all slides at once\n"},{"id":26,"href":"/macrotoolkit-xls/01005/","title":"└ Script-Data Util","section":"MacroToolkit-Excel","content":" Script-Data Util # Calculation # growthRate # Calculate the growth rate.\nachievementRate # Calculate the achievement rate.\nCAGR # Calculate the CAGR.\nWordFill # If there is a value in the right side of the selected reference column, fill the cell value in a DB format.\nallDecimals # In the case of numbers with decimal points, all decimal points come out.\nupsidedown # Return the data of the selected column and return it to the right side.\ninputRandomValue # Enter the sequential date or random integer.\nsepText # In the text that is mixed with characters+numbers, only the number is returned to the right side.\nHandling Name # tableToArray # Copy the clipboard to set the table as a name definition.\nshownamelist # Call the currently defined name list box. → double click : activate name area\npivotRefresh # Automatically update the Pivot Table.\nLaunchTextSplitter # split text from pdf table.\ndietFileSize # Excel file size diet. check all sheet and clear.\n"},{"id":27,"href":"/vba/03006/","title":"UCF-xlookup","section":"VBA","content":" Using XLOOKUP in Office 2019 # Why # Microsoft only releases new features for MS365. Otherwise, you’re forced to purchase an entirely new version. Spending extra money just for a few new functions feels wasteful, so I decided to benchmark the new features and build them as user-defined functions instead.\nxlookup # Unlike VLOOKUP or HLOOKUP, the XLOOKUP function allows you to search for values without being restricted by row or column order. With a bit of VBA, you can implement a similar function yourself.\nFunction XLOOKUP(ByVal lookup_value As Variant, _ ByVal lookup_array As Range, _ ByVal return_array As Range, _ Optional ByVal if_not_found As Variant = CVErr(xlErrNA), _ Optional ByVal match_mode As Long = 0, _ Optional ByVal search_mode As Long = 1) As Variant Dim i As Long, n As Long Dim arrL As Variant, arrR As Variant arrL = lookup_array.value arrR = return_array.value n = UBound(arrL, 1) * UBound(arrL, 2) Dim stepVal As Long stepVal = IIf(search_mode = -1, -1, 1) Dim isRow As Boolean isRow = (UBound(arrL, 1) = 1) If isRow Then Dim j As Long If stepVal = 1 Then For j = 1 To UBound(arrL, 2) If arrL(1, j) = lookup_value Then XLOOKUP = arrR(1, j) Exit Function End If Next j Else For j = UBound(arrL, 2) To 1 Step -1 If arrL(1, j) = lookup_value Then XLOOKUP = arrR(1, j) Exit Function End If Next j End If Else If stepVal = 1 Then For i = 1 To UBound(arrL, 1) If arrL(i, 1) = lookup_value Then XLOOKUP = arrR(i, 1) Exit Function End If Next i Else For i = UBound(arrL, 1) To 1 Step -1 If arrL(i, 1) = lookup_value Then XLOOKUP = arrR(i, 1) Exit Function End If Next i End If End If XLOOKUP = if_not_found End Function argument # Here are the arguments for the custom XLOOKUP\nlookup_value the value you want to find lookup_array the array containing the lookup values return_array the array containing the return values if_not_found(optional) the value to return if no match is found match_mode(optional) 0 = exact match, 1 = next larger value, -1 = next smaller value search_mode(optional) 1 = search from first to last, -1 = search from last to first In essence, this approach is similar to combining INDEX + MATCH. Of course, it won’t perform as well as the native XLOOKUP, but it’s still a practical workaround for Office 2019 users.\noriginal post (Kor) "},{"id":28,"href":"/life/08006/","title":"Registration_sitemap_on_GSC","section":"Life","content":" Issue When Submitting Sitemap to Search Console # sitemap.xml Registration Failure # Even after submitting a sitemap request, it hasn’t been registered for several days. I’m not sure if the issue is with GitHub Pages or Hugo, so I need to check each step one by one.\nSitemap Generation # Hugo provides a built-in sitemap generator, so no additional work is usually needed. Still, I created a custom sitemap just in case, though I’m not sure if it’s the correct approach.\n{{- printf \u0026#34;\u0026lt;?xml version=\\\u0026#34;1.0\\\u0026#34; encoding=\\\u0026#34;UTF-8\\\u0026#34; standalone=\\\u0026#34;yes\\\u0026#34;?\u0026gt;\u0026#34; | safeHTML }} \u0026lt;urlset xmlns=\u0026#34;http://www.sitemaps.org/schemas/sitemap/0.9\u0026#34;\u0026gt; \u0026lt;!-- 홈 --\u0026gt; \u0026lt;url\u0026gt; \u0026lt;loc\u0026gt;{{ .Site.BaseURL | safeURL }}\u0026lt;/loc\u0026gt; \u0026lt;lastmod\u0026gt;{{ with .Site.Home.Lastmod }}{{ .UTC.Format \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; }}{{ else }}{{ now.UTC.Format \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; }}{{ end }}\u0026lt;/lastmod\u0026gt; \u0026lt;changefreq\u0026gt;weekly\u0026lt;/changefreq\u0026gt; \u0026lt;priority\u0026gt;1.0\u0026lt;/priority\u0026gt; \u0026lt;/url\u0026gt; \u0026lt;!-- 정규 페이지들 (draft, private 제외) --\u0026gt; {{- range where .Site.RegularPages \u0026#34;Draft\u0026#34; \u0026#34;ne\u0026#34; true -}} {{- if not .Params.private }} \u0026lt;url\u0026gt; \u0026lt;loc\u0026gt;{{ .Permalink | safeURL }}\u0026lt;/loc\u0026gt; \u0026lt;lastmod\u0026gt;{{ with .Lastmod }}{{ .UTC.Format \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; }}{{ else }}{{ now.UTC.Format \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; }}{{ end }}\u0026lt;/lastmod\u0026gt; \u0026lt;changefreq\u0026gt;{{ with .Params.sitemap_changefreq }}{{ . }}{{ else }}weekly{{ end }}\u0026lt;/changefreq\u0026gt; \u0026lt;priority\u0026gt;{{ with .Params.sitemap_priority }}{{ . }}{{ else }}0.5{{ end }}\u0026lt;/priority\u0026gt; \u0026lt;/url\u0026gt; {{- end }} {{- end }} \u0026lt;/urlset\u0026gt; Checking Googlebot Access # Use the command below to verify whether Googlebot can access the sitemap.xml file.\ncurl -A \u0026#34;Googlebot\u0026#34; -I https://mcjoi.github.io/sitemap.xml result\nHTTP/1.1 200 OK Connection: keep-alive Content-Length: 7764 Server: GitHub.com Content-Type: application/xml No specific settings were made in robots.txt. # User-agent: * Allow: / Sitemap: https://mcjoi.github.io/sitemap.xml Issue Investigation Failed # Since I couldn’t figure out the cause, all I can do is wait.\n"},{"id":29,"href":"/macrotoolkit-ppt/02006/","title":"└ Sctipt-shape","section":"MacroToolkit-ppt","content":" Sctipt-shape # What is it? # Useful functions for handling shape.\nalign_bottom # Aligns selected shape(s) to the bottom of the first selected shape.\nSub shapealign_bottom() Dim standardshape As shape Dim shapeName() As String Dim shapenameOrigin() As String Dim selectShapes As ShapeRange Dim arrcount As Integer Dim x As Integer Dim y As Integer Dim culumheight As Single Dim standardshape_height As Single Dim standardshape_width As Single Dim standardshape_left As Single Dim standardshape_top As Single On Error GoTo Err_Check \u0026#39; 에러 발생 시 Err_Check로 이동 If ActiveWindow.Selection.Type = ppSelectionShapes Then Set selectShapes = ActiveWindow.Selection.ShapeRange \u0026#39;selected shape name array ReDim Preserve shapeName(selectShapes.Count) ReDim Preserve shapenameOrigin(selectShapes.Count) \u0026#39;selected shape name array count arrcount = UBound(shapeName) - LBound(shapeName) For x = 1 To arrcount shapenameOrigin(x) = selectShapes(x).Name selectShapes(x).Name = selectShapes(x).Name \u0026amp; x Next x For Each shp In selectShapes For x = 1 To arrcount If shapeName(x) = \u0026#34;\u0026#34; Then shapeName(x) = shp.Name Exit For End If Next x Next shp Else MsgBox \u0026#34;There is no shape currently selected!\u0026#34;, vbExclamation, \u0026#34;No Shape Found\u0026#34; Exit Sub End If \u0026#39; Ensure there is at least one shape to align If arrcount \u0026lt; 1 Then MsgBox \u0026#34;No shapes were selected for alignment!\u0026#34;, vbExclamation Exit Sub End If \u0026#39; Get standard shape dimensions and position standardshape_height = ActiveWindow.Selection.ShapeRange(shapeName(1)).height standardshape_width = ActiveWindow.Selection.ShapeRange(shapeName(1)).width standardshape_left = ActiveWindow.Selection.ShapeRange(shapeName(1)).left standardshape_top = ActiveWindow.Selection.ShapeRange(shapeName(1)).top For y = 2 To arrcount ActiveWindow.Selection.ShapeRange(shapeName(y)).top = standardshape_top + standardshape_height If y \u0026gt; 2 Then culumheight = culumheight + ActiveWindow.Selection.ShapeRange(shapeName(y - 1)).height ActiveWindow.Selection.ShapeRange(shapeName(y)).top = ActiveWindow.Selection.ShapeRange(shapeName(y)).top + culumheight End If ActiveWindow.Selection.ShapeRange(shapeName(y)).left = standardshape_left Next y For x = 1 To arrcount selectShapes(x).Name = shapenameOrigin(x) Next x Exit Sub Err_Check: If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;오류번호 : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; \u0026#34;오류내용 : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류 발생\u0026#34; End If Exit Sub End Sub align_right # Aligns selected shape(s) to the right of the first selected shape.\nSub shapealign_right() Dim selectedShape As shape Dim secondShape As shape Dim shapeLeftInPoints As Single Dim shapeWidthInPoints As Single Dim sel As Selection Dim i As Integer On Error GoTo Err_Check \u0026#39; 에러 발생 시 Err_Check로 이동 Set sel = ActiveWindow.Selection If sel.Type = ppSelectionShapes Then If sel.ShapeRange.Count \u0026gt;= 2 Then Set selectedShape = sel.ShapeRange(1) For i = 2 To sel.ShapeRange.Count Set secondShape = sel.ShapeRange(i) shapeLeftInPoints = selectedShape.left shapeWidthInPoints = selectedShape.width secondShape.left = shapeLeftInPoints + shapeWidthInPoints Next i Else MsgBox \u0026#34;Please select over 2 shapes\u0026#34;, vbExclamation End If Else MsgBox \u0026#34;Please select shapes.\u0026#34;, vbExclamation End If Exit Sub Err_Check: If Err.Number \u0026lt;\u0026gt; 0 Then MsgBox \u0026#34;오류번호 : \u0026#34; \u0026amp; Err.Number \u0026amp; vbCr \u0026amp; \u0026#34;오류내용 : \u0026#34; \u0026amp; Err.Description, vbCritical, \u0026#34;오류 발생\u0026#34; End If Exit Sub End Sub guidebox # Creates guide boxes (rectangles) spaced at regular intervals.\n"},{"id":30,"href":"/macrotoolkit-xls/01006/","title":"└ Script-Sheet Visibility","section":"MacroToolkit-Excel","content":" Script-Sheet Visibility # sheetVisibleOrNot # Display visibility property table for all sheets in the current workbook.\n→ recommended to work on a new sheet\ncontrolVisibility # Apply value for the changed visibility property.\nsheetNow # Simply check with the message box to see if there is a hidden sheet in the current sheet.\ntoFirstSheet # Go to the first sheet.\n"},{"id":31,"href":"/vba/","title":"VBA","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nHow to use macro? Making Keyboard Shortcut Hover effect Project is Unviewable Error Handler UCF-xlookup "},{"id":32,"href":"/life/","title":"Life","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nSony Creative Look SW - PicPick APS-C lens on FullFrame Registration_sitemap_on_GSC "},{"id":33,"href":"/python/","title":"Python","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nWebP Conversion Program Move file by extensions Extracting Tables from PDF "},{"id":34,"href":"/flutter/","title":"Flutter","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nInit Flutter APIs Windows Desktop Shortcut Windows Click Animation Hiding Google API key "},{"id":35,"href":"/windows_linux/","title":"Windows, Linux","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nuseful command Windows10 Clipboard "},{"id":36,"href":"/macrotoolkit-ppt/","title":"MacroToolkit-ppt","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nMacroToolkit-powerpoint └ Sctipt-table └ Sctipt-color └ Sctipt-text └ Sctipt-slide └ Sctipt-shape "},{"id":37,"href":"/macrotoolkit-xls/","title":"MacroToolkit-Excel","section":"shaaaaallow Dive","content":" select article\u0026hellip;\nMacroToolkit-Excel └ Script-Cell format └ Script-Value format └ Script-Function └ Script-Data Util └ Script-Sheet Visibility "}]